# Script de Inicializa√ß√£o Autom√°tica - Smooth Cuts Booking
# Execute com: .\inicializar.ps1

Write-Host "üöÄ Inicializando Smooth Cuts Booking..." -ForegroundColor Cyan
Write-Host ""

# Fun√ß√£o para verificar se um comando existe
function Test-Command($cmdname) {
    return [bool](Get-Command -Name $cmdname -ErrorAction SilentlyContinue)
}

# Verificar Node.js
Write-Host "üì¶ Verificando Node.js..." -ForegroundColor Yellow
if (Test-Command "node") {
    $nodeVersion = node --version
    Write-Host "‚úÖ Node.js encontrado: $nodeVersion" -ForegroundColor Green
} else {
    Write-Host "‚ùå Node.js n√£o encontrado!" -ForegroundColor Red
    Write-Host ""
    Write-Host "üì• Instalando Node.js..." -ForegroundColor Yellow
    
    # Tentar instalar via winget
    if (Test-Command "winget") {
        Write-Host "üîß Instalando via winget..." -ForegroundColor Blue
        try {
            winget install OpenJS.NodeJS
            Write-Host "‚úÖ Node.js instalado com sucesso!" -ForegroundColor Green
            Write-Host "üîÑ Reinicie o terminal e execute este script novamente." -ForegroundColor Yellow
            pause
            exit
        } catch {
            Write-Host "‚ùå Falha na instala√ß√£o via winget" -ForegroundColor Red
        }
    }
    
    # Se winget falhar, orientar instala√ß√£o manual
    Write-Host "üìñ Instala√ß√£o Manual Necess√°ria:" -ForegroundColor Yellow
    Write-Host "1. Acesse: https://nodejs.org/" -ForegroundColor White
    Write-Host "2. Baixe a vers√£o LTS" -ForegroundColor White
    Write-Host "3. Execute o instalador" -ForegroundColor White
    Write-Host "4. Reinicie o terminal" -ForegroundColor White
    Write-Host "5. Execute este script novamente" -ForegroundColor White
    Write-Host ""
    pause
    exit
}

# Verificar npm
Write-Host "üì¶ Verificando npm..." -ForegroundColor Yellow
if (Test-Command "npm") {
    $npmVersion = npm --version
    Write-Host "‚úÖ npm encontrado: $npmVersion" -ForegroundColor Green
} else {
    Write-Host "‚ùå npm n√£o encontrado! Reinstale o Node.js." -ForegroundColor Red
    pause
    exit
}

Write-Host ""

# Verificar se package.json existe
if (Test-Path "package.json") {
    Write-Host "‚úÖ Projeto encontrado" -ForegroundColor Green
} else {
    Write-Host "‚ùå package.json n√£o encontrado! Execute este script na pasta do projeto." -ForegroundColor Red
    pause
    exit
}

# Verificar node_modules
Write-Host "üìÅ Verificando depend√™ncias..." -ForegroundColor Yellow
if (Test-Path "node_modules") {
    Write-Host "‚úÖ Depend√™ncias j√° instaladas" -ForegroundColor Green
} else {
    Write-Host "üì• Instalando depend√™ncias..." -ForegroundColor Blue
    npm install
    if ($LASTEXITCODE -eq 0) {
        Write-Host "‚úÖ Depend√™ncias instaladas com sucesso!" -ForegroundColor Green
    } else {
        Write-Host "‚ùå Erro ao instalar depend√™ncias" -ForegroundColor Red
        pause
        exit
    }
}

Write-Host ""

# Verificar configura√ß√£o do Supabase
Write-Host "üîß Verificando configura√ß√£o do banco de dados..." -ForegroundColor Yellow
if ($env:SUPABASE_SERVICE_KEY) {
    Write-Host "‚úÖ Chave do Supabase configurada" -ForegroundColor Green
    
    # Executar setup do banco
    Write-Host "üóÑÔ∏è Configurando banco de dados..." -ForegroundColor Blue
    npm run setup-db
    if ($LASTEXITCODE -eq 0) {
        Write-Host "‚úÖ Banco de dados configurado!" -ForegroundColor Green
    } else {
        Write-Host "‚ö†Ô∏è Erro na configura√ß√£o do banco (pode j√° estar configurado)" -ForegroundColor Yellow
    }
} else {
    Write-Host "‚ùå Chave do Supabase n√£o configurada" -ForegroundColor Red
    Write-Host ""
    Write-Host "üìã Para configurar:" -ForegroundColor Yellow
    Write-Host "1. Acesse: https://supabase.com/dashboard" -ForegroundColor White
    Write-Host "2. V√° em Settings > API" -ForegroundColor White
    Write-Host "3. Copie a 'service_role' key" -ForegroundColor White
    Write-Host "4. Execute: `$env:SUPABASE_SERVICE_KEY=\"sua_chave_aqui\"" -ForegroundColor White
    Write-Host "5. Execute este script novamente" -ForegroundColor White
    Write-Host ""
    
    $key = Read-Host "Cole sua chave do Supabase aqui (ou pressione Enter para pular)"
    if ($key) {
        $env:SUPABASE_SERVICE_KEY = $key
        Write-Host "‚úÖ Chave configurada temporariamente" -ForegroundColor Green
        
        # Tentar configurar banco
        Write-Host "üóÑÔ∏è Configurando banco de dados..." -ForegroundColor Blue
        npm run setup-db
        if ($LASTEXITCODE -eq 0) {
            Write-Host "‚úÖ Banco de dados configurado!" -ForegroundColor Green
        } else {
            Write-Host "‚ö†Ô∏è Erro na configura√ß√£o do banco (pode j√° estar configurado)" -ForegroundColor Yellow
        }
    }
}

Write-Host ""

# Iniciar aplica√ß√£o
Write-Host "üöÄ Iniciando aplica√ß√£o..." -ForegroundColor Cyan
Write-Host "üì± A aplica√ß√£o ser√° aberta em: http://localhost:5173" -ForegroundColor Green
Write-Host "‚èπÔ∏è Para parar, pressione Ctrl+C" -ForegroundColor Yellow
Write-Host ""

# Aguardar um momento antes de iniciar
Start-Sleep -Seconds 2

# Iniciar servidor de desenvolvimento
npm run dev